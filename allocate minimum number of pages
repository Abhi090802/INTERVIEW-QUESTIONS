// TC=O(NLOGN) SC=O(1) 
// search space [12,12,12,12] m=4 (12) [low]
// search space [12,13,14,15] m=1 (44) [high]
bool isPossible(int A[], int N, int M,int mid){
       int pageSum=0;
       int studentCount=1;
       for(int i=0;i<N;i++){
           if(pageSum+A[i]<=mid){
               pageSum+=A[i];
           }
           else{
               studentCount++;
               if(studentCount>M ||A[i]>mid){
                   return false;
               }
               pageSum=A[i];
           }
       }
       return true;
   }
   int findPages(int A[], int N, int M) 
   {
       int s=0;
       int sum=0;int mini=0; 
       for(int i=0;i<N;i++)
           { mini=min(mini,A[i]); sum+=A[i];}
       int e=sum;
       s=mini; 
       if(M>N) return -1;
       int ans=0; 
       while(s<=e){ 
           int mid=s+(e-s)/2; 
           if(isPossible(A,N,M,mid)){
               ans=mid;
               e=mid-1;
               
           }
           else{
               s=mid+1;
           }
       }
       return ans;
   }
