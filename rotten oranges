// BFS TRAVERSAL 
// TC=O(M*N) SC=O(M*N) 
vector<int>dx={-1,0,0,1}; 
vector<int>dy={0,-1,1,0}; 
     void bfs(vector<vector<int>> &grid,vector<vector<int>>& vis,queue<pair<int,int>> q,int n,int m)
   {
       while(!q.empty())
       {
           auto it=q.front();
           int i=it.first;
           int j=it.second;
           q.pop(); 
           for(int k=0;k<4;k++)
           { 
              int x=i+dx[k];  int y=j+dy[k]; 
              if(x>=0 and x<n and y>=0 and y<m and grid[x][y]==1)
              { vis[x][y]=vis[i][j]+1; 
              grid[x][y]=2; 
              q.push({x,y}); 
              }
            }
   }
}
   int orangesRotting(vector<vector<int>>& grid) 
   {
       int ans=INT_MIN;
       int n=grid.size();
       int m=grid[0].size();
       queue<pair<int,int>> q;
       vector<vector<int>> vis(n,vector<int>(m,0));
       for(int i=0;i<n;i++)
       {
           for(int j=0;j<m;j++)
           {
               if(grid[i][j]==2)
               {
                   q.push({i,j});
                   vis[i][j]=0;
               }
           }
       }
       bfs(grid,vis,q,n,m); 
       for(int i=0;i<n;i++)
       {
           for(int j=0;j<m;j++)
           {
                if(grid[i][j]==1) return -1;
                   ans=max(ans,vis[i][j]);
           }
       }
       return ans;
   }

